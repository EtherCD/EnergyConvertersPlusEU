buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the nessasary things for Forge to be setup.

def mc_version
if(mc_version_patch > 0)
    mc_version = "${mc_version_major}.${mc_version_minor}.${mc_version_patch}"
else
    mc_version = "${mc_version_major}.${mc_version_minor}"

def mc_version_short = "${mc_version_major}.${mc_version_minor}"

version = version_major + '.' + version_minor + '.' + version_patch + '.' + getBuildNumber()
group= "net.xalcon.energyconverters" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "energyconverters_" + mc_version

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = mc_version + "-" + forge_version
    runDir = "run"
    mappings = mcp_mappings
    replace '@VERSION@', project.version
    replace '@BUILD_NUMBER@', getBuildNumber()
}

repositories {

    maven { url = "http://maven.covers1624.net" } // COFH Mods
    maven { url = "http://maven.ic2.player.to/" }
    maven { url = "http://chickenbones.net/maven/" }
    maven {
        name = "Tesla"
        url 'http://maven.mcmoddev.com'
    }
	maven { url = "http://dvs1.progwml6.com/files/maven" } // JEI
    maven { url = "https://minecraft.curseforge.com/api/maven/" }
    ivy { artifactPattern "http://www.mod-buildcraft.com/releases/BuildCraft/[revision]/[module]-[revision].[ext]" }
}

dependencies {
    deobfCompile "net.industrial-craft:industrialcraft-2:${ic2_version}"
    //compile "net.darkhax.tesla:Tesla-1.12.2:1.0.63"
    deobfCompile "cofh:RedstoneFlux:${mc_version_short}-${redstone_flux_version}:universal"
    compile name: "buildcraft-all", version: "${buildcraft_version}"
	
	//runtime "net.industrial-craft:industrialcraft-2:${ic2_version}"
	runtime "mezz.jei:jei_${mc_version}:${jei_version}"
    runtime "solar-village:SolarVillage:${mc_version}:${solar_village_version}"
    runtime "codechicken:CodeChickenLib:${mc_version}-${ccl_version}:universal"
    runtime "cofh:CoFHCore:${mc_version}-${cofh_core_version}:universal"
    runtime "cofh:CoFHWorld:${mc_version}-${cofh_world_version}:universal"
    runtime "cofh:ThermalFoundation:${mc_version}-${thermal_foundation_version}:universal"
    runtime "cofh:ThermalDynamics:${mc_version}-${thermal_dynamics_version}:universal"
    runtime "cofh:ThermalExpansion:${mc_version}-${thermal_expansion_version}:universal"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

static def getBuildNumber() {
    return "$System.env.BUILD_NUMBER" != "null" ? "$System.env.BUILD_NUMBER" : "0"
}
